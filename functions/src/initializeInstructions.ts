import * as admin from 'firebase-admin';

/**
 * Script para inicializar las instrucciones por defecto en Firebase
 * Se ejecuta una sola vez para configurar la base de datos
 */

// Inicializar Firebase Admin si no est√° inicializado
if (!admin.apps.length) {
  admin.initializeApp();
}

/**
 * Configuraci√≥n por defecto para ciudades
 */
const DEFAULT_CITY_CONFIG = {
  cityName: "Ciudad Ejemplo",
  assistantName: "Asistente IA Oficial de Ciudad Ejemplo",
  cityType: "municipio inteligente",
  region: "Espa√±a",
  specializedServices: "informaci√≥n municipal integral y servicios ciudadanos",
  officialWebsite: "www.ciudadejemplo.es",
  sedeElectronicaUrl: "sede.ciudadejemplo.es",
  municipalPhone: "96X XXX XXX",
  officeHours: "Lunes a Viernes 9:00-14:00, Martes y Jueves 17:00-19:00",
  eventCalendarUrls: "Agenda municipal en proceso de configuraci√≥n",
  cultureWebsites: "Portal de cultura y turismo en desarrollo",
  typicalPlaces: "Centro hist√≥rico, plazas principales, parques urbanos",
  localFood: "Gastronom√≠a mediterr√°nea y productos locales",
  mainMonuments: "Patrimonio hist√≥rico y cultural por documentar",
  transportInfo: "Red de transporte p√∫blico municipal y conexiones regionales",
  emergencyContacts: "092 Polic√≠a Local, 061 Emergencias Sanitarias, 112 Emergencias Generales",
  hospitals: "Centros de salud municipales y hospitales de referencia",
  pharmacyInfo: "Servicio de farmacias de guardia 24/7",
  cityHistory: "Ciudad con rica historia y tradiciones que estamos documentando para ti",
  interestingFacts: "Datos curiosos y an√©cdotas locales en proceso de recopilaci√≥n",
  localTraditions: "Tradiciones centenarias y costumbres locales por descubrir",
  localFestivals: "Fiestas patronales, ferias y celebraciones tradicionales",
  cityHallInfo: "Plaza del Ayuntamiento, centro hist√≥rico de la ciudad",
  mayorInfo: "Informaci√≥n actualizada del alcalde/sa en la web oficial",
  usefulPhones: "Atenci√≥n ciudadana, servicios municipales y consultas generales",
  customInstructions: "",
  lastUpdated: admin.firestore.Timestamp.now()
};

/**
 * Instrucciones gen√©ricas por defecto
 */
const DEFAULT_GENERIC_INSTRUCTIONS = `# üåÜ ASISTENTE IA OFICIAL DE WEARECITY

Eres la IA de **WeAreCity**, un asistente especializado en proporcionar informaci√≥n local de las ciudades. Tu objetivo es ayudar tanto a **ciudadanos** como a **turistas** con consultas de forma clara, precisa y en tiempo real.

## üéØ CAPACIDADES PRINCIPALES

### **Informaci√≥n Municipal**
- Tr√°mites y servicios municipales
- Eventos y actividades locales
- Recomendaciones de lugares y gastronom√≠a
- Informaci√≥n pr√°ctica (transporte, emergencias, salud)
- Historia, cultura y tradiciones locales

### **An√°lisis Inteligente**
- Detectar la intenci√≥n del usuario
- Adaptar respuestas seg√∫n el contexto
- Priorizar informaci√≥n seg√∫n urgencia
- Proporcionar pasos accionables

## üí° INSTRUCCIONES DE COMUNICACI√ìN

- **Lenguaje claro y profesional** con toque cercano
- **Respuestas estructuradas** y f√°ciles de leer
- **Priorizar informaci√≥n oficial** y actualizada
- **Anticipar preguntas** relacionadas
- **Siempre ser √∫til y r√°pido**

## üö´ REGLAS IMPORTANTES

1. **NUNCA** proporcionar informaci√≥n m√©dica o legal espec√≠fica
2. **SIEMPRE** dirigir a fuentes oficiales para informaci√≥n cr√≠tica
3. **NUNCA** hacer promesas sobre tiempos o resultados
4. **SIEMPRE** priorizar la seguridad del usuario

Para obtener informaci√≥n m√°s espec√≠fica, por favor indica de qu√© ciudad necesitas informaci√≥n.`;

/**
 * Funci√≥n para inicializar las instrucciones en Firebase
 */
export async function initializeInstructionsInFirebase() {
  try {
    const db = admin.firestore();
    
    console.log('üöÄ Inicializando instrucciones en Firebase...');
    
    // 1. Crear configuraci√≥n por defecto para ciudades
    await db.collection('ai_instructions').doc('default_city_config').set({
      ...DEFAULT_CITY_CONFIG,
      lastUpdated: admin.firestore.FieldValue.serverTimestamp(),
      createdBy: 'system'
    });
    console.log('‚úÖ Configuraci√≥n por defecto de ciudades creada');
    
    // 2. Crear instrucciones gen√©ricas
    await db.collection('ai_instructions').doc('generic_instructions').set({
      instructions: DEFAULT_GENERIC_INSTRUCTIONS,
      lastUpdated: admin.firestore.FieldValue.serverTimestamp(),
      createdBy: 'system'
    });
    console.log('‚úÖ Instrucciones gen√©ricas creadas');
    
    // 3. Crear configuraci√≥n de ejemplo para Valencia
    const valenciaConfig = {
      ...DEFAULT_CITY_CONFIG,
      cityName: "Valencia",
      assistantName: "Asistente IA Oficial de Valencia",
      cityType: "capital de provincia",
      region: "Comunidad Valenciana",
      specializedServices: "turismo de playa, patrimonio hist√≥rico, gastronom√≠a mediterr√°nea",
      officialWebsite: "www.valencia.es",
      sedeElectronicaUrl: "sede.valencia.es",
      municipalPhone: "010",
      officeHours: "Lunes a Viernes 9:00-14:00, Martes y Jueves 17:00-19:00",
      eventCalendarUrls: "www.valencia.es/agenda, www.turisvalencia.es",
      cultureWebsites: "www.turisvalencia.es, www.culturaydeporte.gob.es",
      typicalPlaces: "Ciudad de las Artes y las Ciencias, Barrio del Carmen, Plaza de la Virgen, Mercado Central",
      localFood: "Paella valenciana, horchata, turrones, fideu√°, all i pebre",
      mainMonuments: "Catedral de Valencia, Torres de Serranos, Lonja de la Seda, Palacio del Marqu√©s de Dos Aguas",
      transportInfo: "Metro de Valencia, EMT autobuses, TRAM, Cercan√≠as Renfe, bicicletas p√∫blicas",
      emergencyContacts: "092 Polic√≠a Local, 061 Emergencias Sanitarias, 112 Emergencias Generales",
      hospitals: "Hospital General de Valencia, Hospital La Fe, Hospital Cl√≠nico",
      pharmacyInfo: "Servicio de farmacias de guardia 24/7, consultar en farmacias locales",
      cityHistory: "Valencia fue fundada por los romanos en el a√±o 138 a.C. y ha sido un importante centro cultural y comercial a lo largo de la historia. Capital del Reino de Valencia durante la Edad Media, es conocida por su rico patrimonio hist√≥rico y cultural.",
      interestingFacts: "Valencia tiene la mayor extensi√≥n de huerta urbana de Europa, la Ciudad de las Artes y las Ciencias es el complejo cient√≠fico-cultural m√°s grande de Espa√±a, y la paella valenciana es Patrimonio Cultural Inmaterial de la Humanidad.",
      localTraditions: "Las Fallas (declaradas Patrimonio Cultural Inmaterial), la Tomatina de Bu√±ol, el Tribunal de las Aguas, las fiestas de San Vicente Ferrer",
      localFestivals: "Las Fallas (marzo), Feria de Julio, Feria de San Vicente, Semana Santa Marinera",
      cityHallInfo: "Plaza del Ayuntamiento, 1. Horario: L-V 9:00-14:00, M y J 17:00-19:00",
      mayorInfo: "Mar√≠a Jos√© Catal√° Verdet (PP) desde 2023",
      usefulPhones: "010 Atenci√≥n Ciudadana, 012 Informaci√≥n General, 900 100 100 Emergencias",
      customInstructions: "Valencia es una ciudad mediterr√°nea con un clima suave todo el a√±o. Prioriza informaci√≥n sobre playas, gastronom√≠a local, eventos culturales y transporte p√∫blico. La ciudad es muy accesible para turistas y tiene una excelente infraestructura tur√≠stica.",
      lastUpdated: admin.firestore.FieldValue.serverTimestamp(),
      createdBy: 'system'
    };
    
    await db.collection('cities_config').doc('valencia').set(valenciaConfig);
    console.log('‚úÖ Configuraci√≥n de Valencia creada');
    
    console.log('üéâ Inicializaci√≥n de instrucciones completada exitosamente');
    
    return {
      success: true,
      message: 'Instrucciones inicializadas en Firebase',
      collections: ['ai_instructions', 'cities_config']
    };
    
  } catch (error) {
    console.error('‚ùå Error inicializando instrucciones:', error);
    throw error;
  }
}

/**
 * Funci√≥n para verificar el estado de las instrucciones
 */
export async function checkInstructionsStatus() {
  try {
    const db = admin.firestore();
    
    console.log('üîç Verificando estado de instrucciones en Firebase...');
    
    // Verificar configuraci√≥n por defecto
    const defaultConfig = await db.collection('ai_instructions').doc('default_city_config').get();
    console.log('üìã Configuraci√≥n por defecto:', defaultConfig.exists ? '‚úÖ Existe' : '‚ùå No existe');
    
    // Verificar instrucciones gen√©ricas
    const genericInstructions = await db.collection('ai_instructions').doc('generic_instructions').get();
    console.log('üìö Instrucciones gen√©ricas:', genericInstructions.exists ? '‚úÖ Existen' : '‚ùå No existen');
    
    // Verificar configuraci√≥n de Valencia
    const valenciaConfig = await db.collection('cities_config').doc('valencia').get();
    console.log('üèôÔ∏è Configuraci√≥n de Valencia:', valenciaConfig.exists ? '‚úÖ Existe' : '‚ùå No existe');
    
    return {
      defaultConfig: defaultConfig.exists,
      genericInstructions: genericInstructions.exists,
      valenciaConfig: valenciaConfig.exists
    };
    
  } catch (error) {
    console.error('‚ùå Error verificando estado:', error);
    throw error;
  }
}

// Si se ejecuta directamente este archivo
if (require.main === module) {
  initializeInstructionsInFirebase()
    .then(() => {
      console.log('‚úÖ Script ejecutado exitosamente');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Error ejecutando script:', error);
      process.exit(1);
    });
}
